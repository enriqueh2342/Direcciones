@model Direcciones.Models.Address

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Edit";
}


<h2 class="">Editar Dirección</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="">
        <div class="row">

            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.AddressID)
                <div class="">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StateProvince, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.StateProvince, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StateProvince, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryRegion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.CountryRegion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CountryRegion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PostalCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.rowguid, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.rowguid, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.rowguid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ModifiedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.ModifiedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModifiedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        <div class="">
                            <button type="submit" class="btn btn-primary w-100">Guardar</button>
                        </div>
                    </div>
                    <br />
                    <div class="form-group">
                        <div class="">
                            <a href="@Url.Action("Index")" class="btn btn-secondary w-100">Regresar</a>
                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td></td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var inputs = document.getElementsByClassName("form-control");
        for (var i = 0; i < inputs.length; i++) {
            inputs[i].setAttribute("style", "max-width:100%");
        }
    </script>
}
